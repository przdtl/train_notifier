services:
  app:
    build: .
    container_name: TrainNotifierApp
    command: ../shell_scripts/start_python_app.sh
    volumes:
      - ./src/migrations/versions:/app/src/migrations/versions
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      taskiq_broker:
        condition: service_healthy
      taskiq_backend:
        condition: service_healthy
      db:
        condition: service_healthy


  db:
    image: postgres:17-alpine
    container_name: TrainNotifierPostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d train_notifier -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=11111
      - POSTGRES_DB=train_notifier
    expose:
      - 5432

  taskiq_backend:
    image: redis:alpine
    container_name: TrainNotifierTaskiqRedisBackend
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    expose:
      - 6379
    volumes:
      - redis_data:/data

  taskiq_broker:
    image: rabbitmq:4
    container_name: TrainNotifierTaskiqRabbitMQBroker
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    expose:
      - 5672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  taskiq_worker:
    build: .
    container_name: TrainNotifierTaskiqWorker
    command: ../shell_scripts/start_taskiq_worker.sh
    env_file:
      - .env
    depends_on:
      taskiq_broker:
        condition: service_healthy
      taskiq_backend:
        condition: service_healthy
      db:
        condition: service_healthy
        
volumes:
  postgres_data:
  rabbitmq_data:
  redis_data: