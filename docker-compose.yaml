services:
  app:
    build: .
    container_name: TrainNotifierApp
    command: ../shell_scripts/start_python_app.sh
    volumes:
      - ./src/migrations/versions:/app/src/migrations/versions
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - db
      - celery_redis

  db:
    image: postgres:17-alpine
    container_name: TrainNotifierPostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d train_notifier -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 10
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=11111
      - POSTGRES_DB=train_notifier
    expose:
      - 5432

  celery_redis:
    image: redis:alpine
    container_name: TrainNotifierCeleryRedis
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    expose:
      - 6379
    restart: always

  celery_worker:
    build: .
    container_name: TrainNotifierCeleryWorker
    command: ../shell_scripts/start_celery_worker.sh
    env_file:
      - .env
    depends_on:
      - celery_redis

volumes:
  postgres_data: